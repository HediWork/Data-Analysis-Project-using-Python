== Foundations of Data Science Project - Diabetes Analysis

[cols="<",]
|==========
|## Context
|==========

Diabetes is one of the most frequent diseases worldwide and the number
of diabetic patients are growing over the years. The main cause of
diabetes remains unknown, yet scientists believe that both genetic
factors and environmental lifestyle play a major role in diabetes.

A few years ago research was done on a tribe in America which is called
the Pima tribe (also known as the Pima Indians). In this tribe, it was
found that the ladies are prone to diabetes very early. Several
constraints were placed on the selection of these instances from a
larger database. In particular, all patients were females at least 21
years old of Pima Indian heritage.

[cols="<",]
|============
|## Objective
|============

Here, we are analyzing different aspects of Diabetes in the Pima Indians
tribe by doing Exploratory Data Analysis.

[cols="<",]
|==================
|## Data Dictionary
|==================

The dataset has the following information:

* Pregnancies: Number of times pregnant
* Glucose: Plasma glucose concentration over 2 hours in an oral glucose
tolerance test
* BloodPressure: Diastolic blood pressure (mm Hg)
* SkinThickness: Triceps skin fold thickness (mm)
* Insulin: 2-Hour serum insulin (mu U/ml)
* BMI: Body mass index (weight in kg/(height in m)^2)
* DiabetesPedigreeFunction: A function that scores the likelihood of
diabetes based on family history.
* Age: Age in years
* Outcome: Class variable (0: a person is not diabetic or 1: a person is
diabetic)

== Q 1: Import the necessary libraries and briefly explain the use of each library (3 Marks)


+*In[56]:*+
[source, ipython3]
----
import numpy as np
import pandas as pd

import seaborn as sns
import matplotlib.pyplot as plt
%matplotlib inline
----

== Write your Answer here:

Ans 1:

*Numpy:*

Numpy is used for handling Numbers, Numerical analysis. It is the
fundamental package for array computing with Python.

*Pandas:*

Pandas are used to process the data. Pandas contain data structures and
data manipulation tools designed for data cleaning and analysis.

*matplotlib.pyplot*

Matplotlib is a visualization library & has been taken from the software
`Matlab`. We are only considering one part of this library to show
plotting, hence used .pyplot which means python plot.

*Seaborn*

Seaborn is another visualization library. When it comes to the
visualization of statistical models like heat maps, Seaborn is among the
reliable sources. This Python library is derived from matplotlib and
closely integrated with Pandas data structures

== Q 2: Read the given dataset (1 Mark)


+*In[58]:*+
[source, ipython3]
----
pima = pd.read_csv("diabetes.csv")
----

== Write your Answer here:

Ans 2:

*`Pandas`* library can be used to import the Diabetes dataset

== Q3. Show the last 10 records of the dataset. How many columns are there? (1 Mark)


+*In[59]:*+
[source, ipython3]
----
pima.tail(10)
----


+*Out[59]:*+
----
[cols=",,,,,,,,,",options="header",]
|=======================================================================
| |Pregnancies |Glucose |BloodPressure |SkinThickness |Insulin |BMI
|DiabetesPedigreeFunction |Age |Outcome
|758 |1 |106 |76 |20 |79 |37.5 |0.197 |26 |0

|759 |6 |190 |92 |20 |79 |35.5 |0.278 |66 |1

|760 |2 |88 |58 |26 |16 |28.4 |0.766 |22 |0

|761 |9 |170 |74 |31 |79 |44.0 |0.403 |43 |1

|762 |9 |89 |62 |20 |79 |22.5 |0.142 |33 |0

|763 |10 |101 |76 |48 |180 |32.9 |0.171 |63 |0

|764 |2 |122 |70 |27 |79 |36.8 |0.340 |27 |0

|765 |5 |121 |72 |23 |112 |26.2 |0.245 |30 |0

|766 |1 |126 |60 |20 |79 |30.1 |0.349 |47 |1

|767 |1 |93 |70 |31 |79 |30.4 |0.315 |23 |0
|=======================================================================
----

== Write your Answer here:

Ans 3:

There are *9 columns* in the dataset

== Q4. Show the first 10 records of the dataset (1 Mark)


+*In[60]:*+
[source, ipython3]
----
pima.head(10)
----


+*Out[60]:*+
----
[cols=",,,,,,,,,",options="header",]
|=======================================================================
| |Pregnancies |Glucose |BloodPressure |SkinThickness |Insulin |BMI
|DiabetesPedigreeFunction |Age |Outcome
|0 |6 |148 |72 |35 |79 |33.600000 |0.627 |50 |1

|1 |1 |85 |66 |29 |79 |26.600000 |0.351 |31 |0

|2 |8 |183 |64 |20 |79 |23.300000 |0.672 |32 |1

|3 |1 |89 |66 |23 |94 |28.100000 |0.167 |21 |0

|4 |0 |137 |40 |35 |168 |43.100000 |2.288 |33 |1

|5 |5 |116 |74 |20 |79 |25.600000 |0.201 |30 |0

|6 |3 |78 |50 |32 |88 |31.000000 |0.248 |26 |1

|7 |10 |115 |69 |20 |79 |35.300000 |0.134 |29 |0

|8 |2 |197 |70 |45 |543 |30.500000 |0.158 |53 |1

|9 |8 |125 |96 |20 |79 |31.992578 |0.232 |54 |1
|=======================================================================
----

== Q5. What do you understand by the dimension of the dataset? Find the dimension of the `pima` dataframe. (1 Mark)


+*In[61]:*+
[source, ipython3]
----
pima.shape
----


+*Out[61]:*+
----(768, 9)----

== Write your Answer here:

Ans 5:

The *shape* of the dataset is a *tuple of 2 elements*. The first element
shows the *number of rows (768 rows)* in the data and the second element
shows the *number of columns (9 columns)* in the data.

== Q6. What do you understand by the size of the dataset? Find the size of the `pima` dataframe. (1 Mark)


+*In[62]:*+
[source, ipython3]
----
pima.size
----


+*Out[62]:*+
----6912----

== Write your Answer here:

Ans 6:

The *size* of the dataset is the *total number of elements (6912
elements)* in the data i.e. product of the number of rows and number of
columns.

== Q7. What are the data types of all the variables in the data set? (2 Marks)

*Hint: Use the info() function to get all the information about the
dataset.*


+*In[63]:*+
[source, ipython3]
----
pima.info()
----


+*Out[63]:*+
----
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 768 entries, 0 to 767
Data columns (total 9 columns):
 #   Column                    Non-Null Count  Dtype  
---  ------                    --------------  -----  
 0   Pregnancies               768 non-null    int64  
 1   Glucose                   768 non-null    int64  
 2   BloodPressure             768 non-null    int64  
 3   SkinThickness             768 non-null    int64  
 4   Insulin                   768 non-null    int64  
 5   BMI                       768 non-null    float64
 6   DiabetesPedigreeFunction  768 non-null    float64
 7   Age                       768 non-null    int64  
 8   Outcome                   768 non-null    int64  
dtypes: float64(2), int64(7)
memory usage: 54.1 KB
----

== Write your Answer here:

Ans 7:

* There are two different data types - float64 (represents numerical
variables *with* decimal places known as `float`) and int64 (represents
numerical variables *without* decimal places known as `integer`)
* There are 2 numerical columns in *float* form -
`BMI, DiabetesPedigreeFunction`
* The rest of the columns are in *integer* form

== Q8. What do we mean by missing values? Are there any missing values in the `pima` dataframe? (2 Marks)


+*In[64]:*+
[source, ipython3]
----
pima.isnull().values.any()
----


+*Out[64]:*+
----False----

== Write your Answer here:

Ans 8:

The *Missing value(s)* is/are any *particular cell(s)* in the dataset
which is/are *blank* i.e. the information is missing.

The output of the above code (False) implies that *there are no missing
values in the data*.

== Q9. What do the summary statistics of the data represent? Find the summary statistics for all variables except `Outcome' in the `pima` data. Take one column/variable from the output table and explain all its statistical measures. (3 Marks)


+*In[65]:*+
[source, ipython3]
----
pima.iloc[:,0:8].describe()
----


+*Out[65]:*+
----
[cols=",,,,,,,,",options="header",]
|=======================================================================
| |Pregnancies |Glucose |BloodPressure |SkinThickness |Insulin |BMI
|DiabetesPedigreeFunction |Age
|count |768.000000 |768.000000 |768.000000 |768.000000 |768.000000
|768.000000 |768.000000 |768.000000

|mean |3.845052 |121.675781 |72.250000 |26.447917 |118.270833 |32.450805
|0.471876 |33.240885

|std |3.369578 |30.436252 |12.117203 |9.733872 |93.243829 |6.875374
|0.331329 |11.760232

|min |0.000000 |44.000000 |24.000000 |7.000000 |14.000000 |18.200000
|0.078000 |21.000000

|25% |1.000000 |99.750000 |64.000000 |20.000000 |79.000000 |27.500000
|0.243750 |24.000000

|50% |3.000000 |117.000000 |72.000000 |23.000000 |79.000000 |32.000000
|0.372500 |29.000000

|75% |6.000000 |140.250000 |80.000000 |32.000000 |127.250000 |36.600000
|0.626250 |41.000000

|max |17.000000 |199.000000 |122.000000 |99.000000 |846.000000
|67.100000 |2.420000 |81.000000
|=======================================================================
----

== Write your Answer here:

Ans 9:

* The total number of Pima patients with diabetes is 768
* The average number of `Pregnancies` is ~4.
* The standard deviation of `Pregnancies` is 3.369578
* The minimum and the maximum number of `Pregnancies` for Pima patients
with diabetes are 0 and 17, respectively.
* 25% - 75% indicates that the middle 50% of values in the dataset have
a spread of 5 times (6 - 1 = 5 times) in `Pregnancies`.

== Q 10. Plot the distribution plot for the variable `BloodPressure'. Write detailed observations from the plot. (2 Marks)


+*In[66]:*+
[source, ipython3]
----
sns.displot(pima['BloodPressure'], kind='kde')
plt.show()
----


+*Out[66]:*+
----
![png](output_36_0.png)
----

== Write your Answer here:

Ans 10:

* The plot shows that most of the observations lie between 60 and 80
i.e. majority of the patients had diastolic blood pressure of 60-80 mm
Hg
* The distribution looks fairly symmetric and there is one peak in the
plot around 75. A distribution with one peak (mode) is called a bell
curve or normal distribution.

== Q 11. What is the `BMI' of the person having the highest `Glucose'? (1 Mark)


+*In[83]:*+
[source, ipython3]
----
pima[pima['Glucose']==pima['Glucose'].max()]['BMI']
----


+*Out[83]:*+
----661    42.9
Name: BMI, dtype: float64----

== Write your Answer here:

Ans 11:

The `BMI' of the person having the highest `Glucose' is 42.9

== Q12.

=== 12.1 What is the mean of the variable `BMI'?

=== 12.2 What is the median of the variable `BMI'?

=== 12.3 What is the mode of the variable `BMI'?

=== 12.4 Are the three measures of central tendency equal?

=== (3 Marks)


+*In[92]:*+
[source, ipython3]
----
m1 = pima['BMI'].mean()  # mean
print(m1)
m2 = pima['BMI'].median()  # median
print(m2)
m3 = pima['BMI'].mode()[0]  # mode
print(m3)
----


+*Out[92]:*+
----
32.45080515543619
32.0
32.0
----

== Write your Answer here:

Ans 12:

* The mean, median, and mode of the variable BMI are 32.45080515543619,
32.0, and 32.0, respectively.
* The mean is slightly greater than the median which implies that the
distribution of BMI might be slightly skewed to the right.
* The three measures of central tendency are not equal, they mean
different things:
** mean: the average BMI in the dataset is 32.45080515543619
** median: the middle value in the dataset is 32.0
** mode: the number that occurs most often in the dataset is 32.0

== Q13. How many women’s `Glucose' levels are above the mean level of `Glucose'? (1 Mark)


+*In[93]:*+
[source, ipython3]
----
pima[pima['Glucose']>pima['Glucose'].mean()].shape[0]
----


+*Out[93]:*+
----343----

== Write your Answer here:

Ans 13:

*343* women’s `Glucose' levels are above the mean level of `Glucose'.

== Q14. How many women have their `BloodPressure' equal to the median of `BloodPressure' and their `BMI' less than the median of `BMI'? (2 Marks)


+*In[120]:*+
[source, ipython3]
----
pima[(pima['BloodPressure']==pima['BloodPressure'].median()) & (pima['BMI']<pima['BMI'].median())].shape[0]
----


+*Out[120]:*+
----22----

== Write your Answer here:

Ans 14:

*22* women have their `BloodPressure' equal to the median of
`BloodPressure' and their `BMI' less than the median of `BMI'

== Q15. Create a pairplot for the variables `Glucose', `SkinThickness', and `DiabetesPedigreeFunction'. Write your observations from the plot. (4 Marks)


+*In[104]:*+
[source, ipython3]
----
sns.pairplot(data=pima,vars=['Glucose', 'SkinThickness', 'DiabetesPedigreeFunction'], hue='Outcome')
plt.show()
----


+*Out[104]:*+
----
![png](output_56_0.png)
----

== Write your Answer here:

Ans 15:

According to the plot, - the absorption of Glucose is poor in diabetic
patients, and their triceps skinfold is thinner than non-diabetic
people. - There is not much information indicating that diabetes is
influenced by family history

== Q16. Plot the scatterplot between `Glucose' and `Insulin'. Write your observations from the plot. (2 Marks)


+*In[121]:*+
[source, ipython3]
----
sns.scatterplot(x='Glucose',y='Insulin',data=pima)
plt.show()
----


+*Out[121]:*+
----
![png](output_60_0.png)
----

== Write your Answer here:

Ans 16:

* more observations are with less insulin and less glucose
* as glucose increases, insulin increases.

== Q 17. Plot the boxplot for the `Age' variable. Are there outliers? (2 Marks)


+*In[112]:*+
[source, ipython3]
----
plt.boxplot(pima['Age'])

plt.title('Boxplot of Age')
plt.ylabel('Age')
plt.show()
----


+*Out[112]:*+
----
![png](output_64_0.png)
----

== Write your Answer here:

Ans 17:

* The boxplot shows that there are *some outliers* above the maximum
value for Age, which are indicated by dots.

== Q18. Plot histograms for the `Age' variable to understand the number of women in different age groups given whether they have diabetes or not. Explain both histograms and compare them. (3 Marks)


+*In[116]:*+
[source, ipython3]
----
plt.hist(pima[pima['Outcome']==1]['Age'], bins = 5)
plt.title('Distribution of Age for Women who has Diabetes')
plt.xlabel('Age')
plt.ylabel('Frequency')
plt.show()
----


+*Out[116]:*+
----
![png](output_68_0.png)
----


+*In[122]:*+
[source, ipython3]
----
plt.hist(pima[pima['Outcome']==0]['Age'], bins = 5)
plt.title('Distribution of Age for Women who do not have Diabetes')
plt.xlabel('Age')
plt.ylabel('Frequency')
plt.show()
----


+*Out[122]:*+
----
![png](output_69_0.png)
----

== Write your Answer here:

Ans 18:

According to the histogram,

* *First graph*: more diabetic people tend to start having diabetes at
their younger age (Age: 20-50).
* *Second graph*: as the age grows, less people are not diabetic
(Frequency: 350-75).

== Q 19. What is the Interquartile Range of all the variables? Why is this used? Which plot visualizes the same? (2 Marks)


+*In[111]:*+
[source, ipython3]
----
Q1 = pima.quantile(0.25)
Q3 = pima.quantile(0.75)
IQR =  Q3 - Q1
print(IQR)

----


+*Out[111]:*+
----
Pregnancies                  5.0000
Glucose                     40.5000
BloodPressure               16.0000
SkinThickness               12.0000
Insulin                     48.2500
BMI                          9.1000
DiabetesPedigreeFunction     0.3825
Age                         17.0000
Outcome                      1.0000
dtype: float64
----

== Write your Answer here:

Ans 19:

* the interquartile range (IQR) measures the spread of the middle half
of your data (50% = 75% - 25%) in which most of the data lie
* boxplot visualizes the same

== Q 20. Find and visualize the correlation matrix. Write your observations from the plot. (3 Marks)


+*In[118]:*+
[source, ipython3]
----
corr_matrix = pima.iloc[:,0:8].corr()

corr_matrix
----


+*Out[118]:*+
----
[cols=",,,,,,,,",options="header",]
|=======================================================================
| |Pregnancies |Glucose |BloodPressure |SkinThickness |Insulin |BMI
|DiabetesPedigreeFunction |Age
|Pregnancies |1.000000 |0.128022 |0.208987 |0.009393 |-0.018780
|0.021546 |-0.033523 |0.544341

|Glucose |0.128022 |1.000000 |0.219765 |0.158060 |0.396137 |0.231464
|0.137158 |0.266673

|BloodPressure |0.208987 |0.219765 |1.000000 |0.130403 |0.010492
|0.281222 |0.000471 |0.326791

|SkinThickness |0.009393 |0.158060 |0.130403 |1.000000 |0.245410
|0.532552 |0.157196 |0.020582

|Insulin |-0.018780 |0.396137 |0.010492 |0.245410 |1.000000 |0.189919
|0.158243 |0.037676

|BMI |0.021546 |0.231464 |0.281222 |0.532552 |0.189919 |1.000000
|0.153508 |0.025748

|DiabetesPedigreeFunction |-0.033523 |0.137158 |0.000471 |0.157196
|0.158243 |0.153508 |1.000000 |0.033561

|Age |0.544341 |0.266673 |0.326791 |0.020582 |0.037676 |0.025748
|0.033561 |1.000000
|=======================================================================
----


+*In[119]:*+
[source, ipython3]
----
plt.figure(figsize=(8,8))
sns.heatmap(corr_matrix, annot = True)

# display the plot
plt.show()
----


+*Out[119]:*+
----
![png](output_78_0.png)
----

== Write your Answer here:

Ans 20:

* there is not a strong positive correlation with all numeric variables.
This indicates that these variables do not look like the factors that
affect people getting diabetes.
